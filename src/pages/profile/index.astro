---
import { LoginFormContainer } from '@/components/LoginFormContainer'
import { SignoutButton } from '@/components/SignoutButton'
import { checkPlayerInLeague } from '@/controllers'
import Layout from '@/layouts/Layout.astro'
import { auth } from '@/lib/firebase/server'
import type { League, LeagueMatch } from '@/types'
import { fetchAstroAPI } from '@/utils'

let showLogin = true
let leagues = null
let players: any[] = []

if (Astro.cookies.has('__session')) {
  const sessionCookie = Astro.cookies.get('__session')?.value

  if (!sessionCookie) {
    showLogin = true
    return
  }

  const decodedCookie = await auth.verifySessionCookie(sessionCookie)
  if (decodedCookie) {
    showLogin = false
  }

  try {
    const { data } = await checkPlayerInLeague(decodedCookie.uid)
    leagues = data.leagues

    for (let league of leagues) {
      if (league.players) {
        const { data } = await fetchAstroAPI({
          method: 'POST',
          endpoint: '/users',
          body: {
            ids: league.players,
          },
        })

        league.players.forEach((playerId: any) => {
          const player = data.users.find(
            (player: any) => player.uid === playerId
          )
          players.push({
            uid: player.uid,
            displayName: player.displayName,
            leagueId: league._id,
          })
        })
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message)
    }
  }
}
---

<Layout title="Login">
  <img
    class="w-32 h-32 rounded-full mx-auto"
    src="/images/placeholder.jpg"
    alt="Profile Picture"
    transition:name="profile-img"
  />
  <section class="w-full flex justify-center my-3">
    {
      showLogin ? (
        <LoginFormContainer client:load />
      ) : (
        <SignoutButton client:load />
      )
    }
  </section>
  {
    leagues &&
      leagues.map((league: League) => (
        <section class="w-full flex flex-col justify-center my-3">
          <p class="text-center">{league.name}</p>

          <article>
            <h2>Matches</h2>
            <ul>
              {league.matches?.map((match: LeagueMatch) => (
                <li>
                  <a href={`/league-matches/${match._id}`}>
                    {
                      players.find(
                        (player: any) => player.uid === match.player1
                      )?.displayName
                    }
                    vs
                    {
                      players.find(
                        (player: any) => player.uid === match.player2
                      )?.displayName
                    }
                  </a>
                  <span>{match.score}</span>
                </li>
              ))}
            </ul>
          </article>
        </section>
      ))
  }
</Layout>
