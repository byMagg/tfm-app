---
import Layout from '@/layouts/Layout.astro'
import { Country, type Match } from '@/types'
import { fetchAPI, getPlayerImage, parseDateString } from '@/utils'
import { Image } from 'astro:assets'

const { id } = Astro.params

const query = `
      query GetMatch {
        getMatchById(matchId: "${id}") {
        _id
        tourney_id
        tourney_name
        surface
        draw_size
        tourney_level
        tourney_date
        match_num
        winner_id
        winner_seed
        winner_entry
        winner_name
        winner_hand
        winner_ht
        winner_ioc
        winner_age
        loser_id
        loser_seed
        loser_entry
        loser_name
        loser_hand
        loser_ht
        loser_ioc
        loser_age
        score
        best_of
        round
        minutes
        w_ace
        w_df
        w_svpt
        w_1stIn
        w_1stWon
        w_2ndWon
        w_SvGms
        w_bpSaved
        w_bpFaced
        l_ace
        l_df
        l_svpt
        l_1stIn
        l_1stWon
        l_2ndWon
        l_SvGms
        l_bpSaved
        l_bpFaced
        winner_rank
        winner_rank_points
        loser_rank
        loser_rank_points
        winner1_id
        winner2_id
        loser1_id
        loser2_id
        winner1_name
        winner1_hand
        winner1_ht
        winner1_ioc
        winner1_age
        winner2_name
        winner2_hand
        winner2_ht
        winner2_ioc
        winner2_age
        loser1_name
        loser1_hand
        loser1_ht
        loser1_ioc
        loser1_age
        loser2_name
        loser2_hand
        loser2_ht
        loser2_ioc
        loser2_age
        winner1_rank
        winner1_rank_points
        winner2_rank
        winner2_rank_points
        loser1_rank
        loser1_rank_points
        loser2_rank
        loser2_rank_points
        }
      }
  `

const { getMatchById } = (await fetchAPI(query)) || {}
const match = getMatchById as Match | undefined

let loserCountryCode,
  winnerCountryCode = undefined

let winnerImg = ''
let loserImg = ''

if (match) {
  loserCountryCode = Country[match.loser_ioc as keyof typeof Country]
  winnerCountryCode = Country[match.winner_ioc as keyof typeof Country]

  winnerImg = await getPlayerImage(match.winner_id)
  loserImg = await getPlayerImage(match.loser_id)
}
---

<Layout title={`${id}`}>
  {
    match && (
      <div class="z-10 relative">
        <div class="flex gap-3">
          <div>
            <Image
              src={winnerImg}
              alt={match.winner_name}
              width={100}
              height={100}
            />
            <h2>{match.winner_name}</h2>
            <img
              src={`/svgs/${winnerCountryCode}.svg`}
              alt={match.winner_ioc}
              width="50"
              height="50"
            />
            <h3>{match.winner_ioc}</h3>
          </div>
          <div>
            <Image
              src={loserImg}
              alt={match.loser_name}
              width={100}
              height={100}
            />
            <h2>{match.loser_name}</h2>
            <img
              src={`/svgs/${loserCountryCode}.svg`}
              alt={match.loser_ioc}
              width="50"
              height="50"
            />
            <h3>{match.loser_ioc}</h3>
          </div>
        </div>
        <h3>{match.score}</h3>
        <h4>{match.tourney_name}</h4>
        <h5>{parseDateString(match.tourney_date).toLocaleDateString()}</h5>
      </div>
    )
  }
  {
    match && match.surface && (
      <Image
        class="absolute top-0 left-0 z-0 h-full w-full object-cover"
        style="mask-image: linear-gradient(transparent 40%, black);"
        transition:name={`surface-${match._id}`}
        src={`/images/${match.surface && match.surface.toLowerCase()}.webp`}
        alt={`${match.surface} court`}
        width={500}
        height={500}
      />
    )
  }
</Layout>
