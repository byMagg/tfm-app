---
import { CalendarForm } from '@/components/CalendarForm'
import { Chat } from '@/components/Chat'
import { Score } from '@/components/Score'
import { getLeagueMatchById } from '@/controllers'
import Layout from '@/layouts/Layout.astro'
import { fetchAstroAPI } from '@/utils'

const { id } = Astro.params

const { data } = await getLeagueMatchById(id)

const match = data

let from = null
let to = null

let player1 = null
let player2 = null

if (match) {
  const { data } = await fetchAstroAPI({
    method: 'POST',
    endpoint: '/users',
    body: {
      ids: [match.player1, match.player2],
    },
  })

  player1 = data.users.find((user: any) => user.uid === match.player1)
  player2 = data.users.find((user: any) => user.uid === match.player2)
}

if (Astro.cookies.has('__session')) {
  const sessionCookie = Astro.cookies.get('__session')?.value

  if (!sessionCookie) {
    return
  }

  // const decodedCookie = await auth.verifySessionCookie(sessionCookie)
  // from = decodedCookie.uid
  to = match?.player1 === from ? match?.player2 : match?.player1
}
---

<Layout>
  <div>
    <div class="container mx-auto flex">
      <div class="w-1/2">
        <h1 class="text-2xl font-bold">
          {player1?.displayName} vs {player2?.displayName}
        </h1>

        {
          !match.winner && (
            <div>
              <p>Match is not finished yet</p>
              <Score matchId={id} client:load />
            </div>
          )
        }
        {
          match.winner && (
            <>
              <p>{match.score}</p>
            </>
          )
        }
        <div class="my-5">
          <CalendarForm client:load />
        </div>
      </div>

      <div class="w-1/2">
        <Chat from={from} to={to} client:load />
      </div>
    </div>
  </div>
</Layout>
