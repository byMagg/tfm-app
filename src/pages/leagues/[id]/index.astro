---
import TableUsersComponent from '@/components/TableUsersComponent'
import Layout from '@/layouts/Layout.astro'
import { type League } from '@/types'
import { fetchAPI } from '@/utils'

const { id } = Astro.params

const query = `
      query GetLeague {
        getLeagueById(leagueId: "${id}") {
          _id
          name
          players
          startedAt
        }
      }
  `

const { getLeagueById } = (await fetchAPI(query)) || {}
const league = getLeagueById as League | undefined

let players = []

try {
  const response = await fetch(
    `${Astro.url.protocol}//${Astro.url.host}/api/users`,
    {
      method: 'POST',
      body: JSON.stringify({
        ids: league?.players || [],
      }),
      headers: {
        'Content-Type': 'application/json',
      },
    }
  )

  const data = (await response.json()).data.users
  players = data
} catch (error) {
  console.error(error)
}
---

<Layout title={`${league ? `${league.name}` : 'League'}`}>
  {
    league && (
      <div>
        <h1>{league.name}</h1>
        {league.startedAt ? (
          <h3>EN JUEGO</h3>
        ) : (
          <button id="start-season" data-league-id={league?._id}>
            <a>Start season</a>
          </button>
        )}
      </div>
    )
  }
  <div>
    <button>
      <a href={`/leagues/${id}/players`}>Add Player</a>
    </button>
  </div>
  {
    league && (
      <div>
        <h3>Players</h3>

        <TableUsersComponent
          client:load
          playerIds={league?.players || []}
          leagueId={league._id}
        />
      </div>
    )
  }
</Layout>

<script>
  import { fetchAPI } from '@/utils'

  const $startSeason = document.getElementById('start-season')

  if ($startSeason) {
    $startSeason.addEventListener('click', async () => {
      const league = $startSeason.getAttribute('data-league-id')

      const query = `
        query {
          startSeason(leagueId: "${league}") {
            _id
            startedAt
          }
        }
      `

      const { startSeason } = await fetchAPI(query)

      if (startSeason) {
        location.reload()
      }
    })
  }
</script>
